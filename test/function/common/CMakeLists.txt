#
# Copyright @ 2019 Audi AG. All rights reserved.
# 
#     This Source Code Form is subject to the terms of the Mozilla
#     Public License, v. 2.0. If a copy of the MPL was not distributed
#     with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
# 
# If it is not possible or desirable to put the notice in a particular file, then
# You may include the notice in a location (such as a LICENSE file in a
# relevant directory) where a recipient would be likely to look for such a notice.
# 
# You may add additional accurate notices of copyright ownership.
#
if(NOT BUILD_PKG_RPC)   ##standalone
    set(_interface_include_directory ${pkg_rpc_DIR}/include)
else()
    set(_interface_include_directory ${PROJECT_SOURCE_DIR}/src)
endif()

# Create the test template cpp file, later configured to one cpp file containing one public header
set(_test_filepath_no_ext ${CMAKE_CURRENT_BINARY_DIR}/generated/test_self_contained_header)
file(WRITE ${_test_filepath_no_ext}.cpp.in
     "//Auto generated by CMake in file: ${CMAKE_CURRENT_LIST_FILE}\n"
     "#include <gtest/gtest.h>\n"
     "#include \"@_header_file@\"\n\n"
     "TEST(HeaderFile, @_relative_path_no_ext@_isSelfContained) {\n    SUCCEED();\n}\n")

# Get all public header files and configure the corresponding *.cpp file including this header
file(GLOB_RECURSE _header_files ${_interface_include_directory}/*.h)
foreach(_header_file ${_header_files})
    math(EXPR _file_number "${_file_number}+1")
    file(RELATIVE_PATH _relative_path_no_ext ${_interface_include_directory} ${_header_file})
    string(REGEX REPLACE "[/\\. ]" "_" _relative_path_no_ext ${_relative_path_no_ext})
    configure_file(${_test_filepath_no_ext}.cpp.in ${_test_filepath_no_ext}_${_file_number}.cpp)
    set(_test_files ${_test_files} ${_test_filepath_no_ext}_${_file_number}.cpp)
endforeach()

# Compile and link all generated cpp test files to one executable and create a test
add_executable(tester_self_contained_header_files ${_test_files})
target_link_libraries(tester_self_contained_header_files PRIVATE GTest::Main pkg_rpc)
add_test(tester_self_contained_header_files tester_self_contained_header_files)
set_target_properties(tester_self_contained_header_files PROPERTIES FOLDER "pkg_rpc/test")

